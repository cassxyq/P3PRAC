---
- hosts: AWS
  become: true
  become_user: root
  remote_user: ubuntu

  vars_files:
    - vars.yaml

  pre_tasks:
    - name: install pip3
      ansible.builtin.apt: 
        name: python3-pip 
        state: present 
        update_cache: yes

    - name: "Install Python packages"
      become: yes
      ansible.builtin.pip:
        name: psycopg2-binary
        state: present

  tasks:
    - name: install OpenJDK11
      become: yes
      ansible.builtin.apt:
        name: openjdk-11-jdk
        state: present
        update_cache: yes

    - name: Add the PostgreSQL signing key
      become: yes
      ansible.builtin.apt_key:
        url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
        state: present

    # - name: Add the PostgreSQL repository
    #   become: yes
    #   ansible.builtin.apt_repository:
    #     repo: "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main"
    #     state: present

    - name: Add the PostgreSQL repository
      become: yes
      ansible.builtin.shell: 
        sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" >> /etc/apt/sources.list.d/pgdg.list'

    - name: install PostgreSQL
      become: yes
      ansible.builtin.apt:
        name: postgresql, postgresql-contrib

    - name: Enable and Start PostgreSQL
      ansible.builtin.service:
        name: postgresql
        state: started
        enabled: yes
      become: yes

    - name: "Create app database"
      postgresql_db:
        state: present
        name: "{{ db_name }}"
      become: yes
      become_user: postgres

    - name: "Create db user"
      postgresql_user:
        state: present
        name: "{{ db_user }}"
        password: "{{ db_password }}"
      become: yes
      become_user: postgres

    - name: Change the owner to sonar
      become: yes
      become_user: postgres
      postgresql_owner:
        db: "{{ db_name }}"
        new_owner: "{{ db_user }}"

    - name: "Grant db user access to app db"
      postgresql_privs:
        type: database
        database: "{{ db_name }}"
        roles: "{{ db_user }}"
        grant_option: no
        privs: all
      become: yes
      become_user: postgres

    - name: install zip
      ansible.builtin.apt:
        name: zip
        state: present
        update_cache: yes

    - name: sonarqube dir
      become: yes
      ansible.builtin.file:
        path: /opt/sonarqube
        state: directory
        mode: '0755'

    - name: download sonarqube
      become: yes
      ansible.builtin.get_url:
        url: https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-{{ sonar_version }}.zip
        dest: /opt/sonarqube
        mode: '0755'

    - name: unzip file
      become: yes
      ansible.builtin.unarchive:
        src: /opt/sonarqube/sonarqube-{{ sonar_version }}.zip
        dest: /opt/sonarqube
        remote_src: yes